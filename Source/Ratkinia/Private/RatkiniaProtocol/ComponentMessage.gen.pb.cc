// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Components/ComponentMessage.gen.proto
// Protobuf C++ Version: 5.27.3

#include "Components/ComponentMessage.gen.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace RatkiniaProtocol {

inline constexpr ComponentVariant::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ComponentVariant::ComponentVariant(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ComponentVariantDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComponentVariantDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComponentVariantDefaultTypeInternal() {}
  union {
    ComponentVariant _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComponentVariantDefaultTypeInternal _ComponentVariant_default_instance_;
}  // namespace RatkiniaProtocol
namespace RatkiniaProtocol {
// ===================================================================

class ComponentVariant::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::RatkiniaProtocol::ComponentVariant, _impl_._oneof_case_);
};

void ComponentVariant::set_allocated_name_tag(::RatkiniaProtocol::NameTag* name_tag) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (name_tag) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(name_tag)->GetArena();
    if (message_arena != submessage_arena) {
      name_tag = ::google::protobuf::internal::GetOwnedMessage(message_arena, name_tag, submessage_arena);
    }
    set_has_name_tag();
    _impl_.value_.name_tag_ = name_tag;
  }
  // @@protoc_insertion_point(field_set_allocated:RatkiniaProtocol.ComponentVariant.name_tag)
}
void ComponentVariant::clear_name_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kNameTag) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.name_tag_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      if (_impl_.value_.name_tag_ != nullptr) {
        _impl_.value_.name_tag_->Clear();
      }
    }
    clear_has_value();
  }
}
ComponentVariant::ComponentVariant(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.ComponentVariant)
}
inline PROTOBUF_NDEBUG_INLINE ComponentVariant::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RatkiniaProtocol::ComponentVariant& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ComponentVariant::ComponentVariant(
    ::google::protobuf::Arena* arena,
    const ComponentVariant& from)
    : ::google::protobuf::MessageLite(arena) {
  ComponentVariant* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kNameTag:
        _impl_.value_.name_tag_ = ::google::protobuf::MessageLite::CopyConstruct<::RatkiniaProtocol::NameTag>(arena, *from._impl_.value_.name_tag_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:RatkiniaProtocol.ComponentVariant)
}
inline PROTOBUF_NDEBUG_INLINE ComponentVariant::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ComponentVariant::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ComponentVariant::~ComponentVariant() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.ComponentVariant)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void ComponentVariant::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_value()) {
    clear_value();
  }
  _impl_.~Impl_();
}

void ComponentVariant::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:RatkiniaProtocol.ComponentVariant)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kNameTag: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.name_tag_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        if (_impl_.value_.name_tag_ != nullptr) {
          _impl_.value_.name_tag_->Clear();
        }
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
ComponentVariant::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<34> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ComponentVariant, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.ComponentVariant",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ComponentVariant::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ComponentVariant_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::ComponentVariant>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .RatkiniaProtocol.NameTag name_tag = 1;
    {PROTOBUF_FIELD_OFFSET(ComponentVariant, _impl_.value_.name_tag_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RatkiniaProtocol::NameTag>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ComponentVariant::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.ComponentVariant)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* ComponentVariant::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.ComponentVariant)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .RatkiniaProtocol.NameTag name_tag = 1;
  if (value_case() == kNameTag) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.value_.name_tag_, _impl_.value_.name_tag_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.ComponentVariant)
  return target;
}

::size_t ComponentVariant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.ComponentVariant)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // .RatkiniaProtocol.NameTag name_tag = 1;
    case kNameTag: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.name_tag_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void ComponentVariant::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const ComponentVariant*>(
      &from));
}

void ComponentVariant::MergeFrom(const ComponentVariant& from) {
  ComponentVariant* const _this = this;
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.ComponentVariant)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kNameTag: {
        if (oneof_needs_init) {
          _this->_impl_.value_.name_tag_ =
              ::google::protobuf::MessageLite::CopyConstruct<::RatkiniaProtocol::NameTag>(arena, *from._impl_.value_.name_tag_);
        } else {
          _this->_impl_.value_.name_tag_->MergeFrom(from._internal_name_tag());
        }
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void ComponentVariant::CopyFrom(const ComponentVariant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.ComponentVariant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ComponentVariant::InternalSwap(ComponentVariant* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace RatkiniaProtocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
