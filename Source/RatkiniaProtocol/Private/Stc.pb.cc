// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Stc.proto
// Protobuf C++ Version: 5.27.3

#include "Stc.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace RatkiniaProtocol {

inline constexpr SpawnEntity_Data::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entity_id_{0},
        type_{static_cast< ::RatkiniaProtocol::SpawnEntity_Type >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SpawnEntity_Data::SpawnEntity_Data(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SpawnEntity_DataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpawnEntity_DataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpawnEntity_DataDefaultTypeInternal() {}
  union {
    SpawnEntity_Data _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpawnEntity_DataDefaultTypeInternal _SpawnEntity_Data_default_instance_;

inline constexpr SendMyCharacters_Data::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SendMyCharacters_Data::SendMyCharacters_Data(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SendMyCharacters_DataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMyCharacters_DataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMyCharacters_DataDefaultTypeInternal() {}
  union {
    SendMyCharacters_Data _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMyCharacters_DataDefaultTypeInternal _SendMyCharacters_Data_default_instance_;

inline constexpr RegisterResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : failed_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        successful_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterResponse::RegisterResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterResponseDefaultTypeInternal() {}
  union {
    RegisterResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterResponseDefaultTypeInternal _RegisterResponse_default_instance_;

inline constexpr OpenWorld::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OpenWorld::OpenWorld(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OpenWorldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpenWorldDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpenWorldDefaultTypeInternal() {}
  union {
    OpenWorld _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpenWorldDefaultTypeInternal _OpenWorld_default_instance_;

inline constexpr Notificate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::RatkiniaProtocol::Notificate_Type >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Notificate::Notificate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NotificateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotificateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotificateDefaultTypeInternal() {}
  union {
    Notificate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotificateDefaultTypeInternal _Notificate_default_instance_;

inline constexpr LoginResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_{static_cast< ::RatkiniaProtocol::LoginResponse_LoginResult >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LoginResponse::LoginResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LoginResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginResponseDefaultTypeInternal() {}
  union {
    LoginResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;

inline constexpr CreateCharacterResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_{static_cast< ::RatkiniaProtocol::CreateCharacterResponse_CreateCharacterResult >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateCharacterResponse::CreateCharacterResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateCharacterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateCharacterResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateCharacterResponseDefaultTypeInternal() {}
  union {
    CreateCharacterResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateCharacterResponseDefaultTypeInternal _CreateCharacterResponse_default_instance_;

inline constexpr AttachComponent_Data::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : target_entity_{0},
        component_runtime_order_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AttachComponent_Data::AttachComponent_Data(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AttachComponent_DataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttachComponent_DataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttachComponent_DataDefaultTypeInternal() {}
  union {
    AttachComponent_Data _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttachComponent_DataDefaultTypeInternal _AttachComponent_Data_default_instance_;

inline constexpr SpawnEntity::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entity_spawn_datas_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SpawnEntity::SpawnEntity(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SpawnEntityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpawnEntityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpawnEntityDefaultTypeInternal() {}
  union {
    SpawnEntity _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpawnEntityDefaultTypeInternal _SpawnEntity_default_instance_;

inline constexpr SendMyCharacters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : character_load_datas_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SendMyCharacters::SendMyCharacters(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SendMyCharactersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMyCharactersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMyCharactersDefaultTypeInternal() {}
  union {
    SendMyCharacters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMyCharactersDefaultTypeInternal _SendMyCharacters_default_instance_;

inline constexpr AttachComponent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_attach_datas_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AttachComponent::AttachComponent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AttachComponentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttachComponentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttachComponentDefaultTypeInternal() {}
  union {
    AttachComponent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttachComponentDefaultTypeInternal _AttachComponent_default_instance_;

inline constexpr UpdateComponent_Data::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        component_variant_{nullptr},
        target_entity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateComponent_Data::UpdateComponent_Data(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateComponent_DataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateComponent_DataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateComponent_DataDefaultTypeInternal() {}
  union {
    UpdateComponent_Data _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateComponent_DataDefaultTypeInternal _UpdateComponent_Data_default_instance_;

inline constexpr UpdateComponent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : component_update_datas_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateComponent::UpdateComponent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateComponentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateComponentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateComponentDefaultTypeInternal() {}
  union {
    UpdateComponent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateComponentDefaultTypeInternal _UpdateComponent_default_instance_;
}  // namespace RatkiniaProtocol
namespace RatkiniaProtocol {
PROTOBUF_CONSTINIT const uint32_t LoginResponse_LoginResult_internal_data_[] = {
    262144u, 0u, };
bool LoginResponse_LoginResult_IsValid(int value) {
  return 0 <= value && value <= 3;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    LoginResponse_LoginResult_strings[4] = {};

static const char LoginResponse_LoginResult_names[] = {
    "DuplicateAccount"
    "DuplicateContext"
    "Failure"
    "Success"
};

static const ::google::protobuf::internal::EnumEntry LoginResponse_LoginResult_entries[] =
    {
        {{&LoginResponse_LoginResult_names[0], 16}, 3},
        {{&LoginResponse_LoginResult_names[16], 16}, 2},
        {{&LoginResponse_LoginResult_names[32], 7}, 1},
        {{&LoginResponse_LoginResult_names[39], 7}, 0},
};

static const int LoginResponse_LoginResult_entries_by_number[] = {
    3,  // 0 -> Success
    2,  // 1 -> Failure
    1,  // 2 -> DuplicateContext
    0,  // 3 -> DuplicateAccount
};

const std::string& LoginResponse_LoginResult_Name(LoginResponse_LoginResult value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          LoginResponse_LoginResult_entries, LoginResponse_LoginResult_entries_by_number,
          4, LoginResponse_LoginResult_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      LoginResponse_LoginResult_entries, LoginResponse_LoginResult_entries_by_number, 4,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : LoginResponse_LoginResult_strings[idx].get();
}

bool LoginResponse_LoginResult_Parse(absl::string_view name, LoginResponse_LoginResult* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      LoginResponse_LoginResult_entries, 4, name, &int_value);
  if (success) {
    *value = static_cast<LoginResponse_LoginResult>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr LoginResponse_LoginResult LoginResponse::Success;
constexpr LoginResponse_LoginResult LoginResponse::Failure;
constexpr LoginResponse_LoginResult LoginResponse::DuplicateContext;
constexpr LoginResponse_LoginResult LoginResponse::DuplicateAccount;
constexpr LoginResponse_LoginResult LoginResponse::LoginResult_MIN;
constexpr LoginResponse_LoginResult LoginResponse::LoginResult_MAX;
constexpr int LoginResponse::LoginResult_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
PROTOBUF_CONSTINIT const uint32_t CreateCharacterResponse_CreateCharacterResult_internal_data_[] = {
    262144u, 0u, };
bool CreateCharacterResponse_CreateCharacterResult_IsValid(int value) {
  return 0 <= value && value <= 3;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    CreateCharacterResponse_CreateCharacterResult_strings[4] = {};

static const char CreateCharacterResponse_CreateCharacterResult_names[] = {
    "DuplicateName"
    "InvalidNameLength"
    "Success"
    "UnknownError"
};

static const ::google::protobuf::internal::EnumEntry CreateCharacterResponse_CreateCharacterResult_entries[] =
    {
        {{&CreateCharacterResponse_CreateCharacterResult_names[0], 13}, 2},
        {{&CreateCharacterResponse_CreateCharacterResult_names[13], 17}, 1},
        {{&CreateCharacterResponse_CreateCharacterResult_names[30], 7}, 0},
        {{&CreateCharacterResponse_CreateCharacterResult_names[37], 12}, 3},
};

static const int CreateCharacterResponse_CreateCharacterResult_entries_by_number[] = {
    2,  // 0 -> Success
    1,  // 1 -> InvalidNameLength
    0,  // 2 -> DuplicateName
    3,  // 3 -> UnknownError
};

const std::string& CreateCharacterResponse_CreateCharacterResult_Name(CreateCharacterResponse_CreateCharacterResult value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          CreateCharacterResponse_CreateCharacterResult_entries, CreateCharacterResponse_CreateCharacterResult_entries_by_number,
          4, CreateCharacterResponse_CreateCharacterResult_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      CreateCharacterResponse_CreateCharacterResult_entries, CreateCharacterResponse_CreateCharacterResult_entries_by_number, 4,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : CreateCharacterResponse_CreateCharacterResult_strings[idx].get();
}

bool CreateCharacterResponse_CreateCharacterResult_Parse(absl::string_view name, CreateCharacterResponse_CreateCharacterResult* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      CreateCharacterResponse_CreateCharacterResult_entries, 4, name, &int_value);
  if (success) {
    *value = static_cast<CreateCharacterResponse_CreateCharacterResult>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CreateCharacterResponse_CreateCharacterResult CreateCharacterResponse::Success;
constexpr CreateCharacterResponse_CreateCharacterResult CreateCharacterResponse::InvalidNameLength;
constexpr CreateCharacterResponse_CreateCharacterResult CreateCharacterResponse::DuplicateName;
constexpr CreateCharacterResponse_CreateCharacterResult CreateCharacterResponse::UnknownError;
constexpr CreateCharacterResponse_CreateCharacterResult CreateCharacterResponse::CreateCharacterResult_MIN;
constexpr CreateCharacterResponse_CreateCharacterResult CreateCharacterResponse::CreateCharacterResult_MAX;
constexpr int CreateCharacterResponse::CreateCharacterResult_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
PROTOBUF_CONSTINIT const uint32_t Notificate_Type_internal_data_[] = {
    196608u, 0u, };
bool Notificate_Type_IsValid(int value) {
  return 0 <= value && value <= 2;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    Notificate_Type_strings[3] = {};

static const char Notificate_Type_names[] = {
    "Fatal"
    "Info"
    "Warning"
};

static const ::google::protobuf::internal::EnumEntry Notificate_Type_entries[] =
    {
        {{&Notificate_Type_names[0], 5}, 2},
        {{&Notificate_Type_names[5], 4}, 0},
        {{&Notificate_Type_names[9], 7}, 1},
};

static const int Notificate_Type_entries_by_number[] = {
    1,  // 0 -> Info
    2,  // 1 -> Warning
    0,  // 2 -> Fatal
};

const std::string& Notificate_Type_Name(Notificate_Type value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          Notificate_Type_entries, Notificate_Type_entries_by_number,
          3, Notificate_Type_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      Notificate_Type_entries, Notificate_Type_entries_by_number, 3,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : Notificate_Type_strings[idx].get();
}

bool Notificate_Type_Parse(absl::string_view name, Notificate_Type* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      Notificate_Type_entries, 3, name, &int_value);
  if (success) {
    *value = static_cast<Notificate_Type>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Notificate_Type Notificate::Info;
constexpr Notificate_Type Notificate::Warning;
constexpr Notificate_Type Notificate::Fatal;
constexpr Notificate_Type Notificate::Type_MIN;
constexpr Notificate_Type Notificate::Type_MAX;
constexpr int Notificate::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
PROTOBUF_CONSTINIT const uint32_t SpawnEntity_Type_internal_data_[] = {
    131072u, 0u, };
bool SpawnEntity_Type_IsValid(int value) {
  return 0 <= value && value <= 1;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    SpawnEntity_Type_strings[2] = {};

static const char SpawnEntity_Type_names[] = {
    "MyCharacter"
    "Normal"
};

static const ::google::protobuf::internal::EnumEntry SpawnEntity_Type_entries[] =
    {
        {{&SpawnEntity_Type_names[0], 11}, 1},
        {{&SpawnEntity_Type_names[11], 6}, 0},
};

static const int SpawnEntity_Type_entries_by_number[] = {
    1,  // 0 -> Normal
    0,  // 1 -> MyCharacter
};

const std::string& SpawnEntity_Type_Name(SpawnEntity_Type value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          SpawnEntity_Type_entries, SpawnEntity_Type_entries_by_number,
          2, SpawnEntity_Type_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      SpawnEntity_Type_entries, SpawnEntity_Type_entries_by_number, 2,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : SpawnEntity_Type_strings[idx].get();
}

bool SpawnEntity_Type_Parse(absl::string_view name, SpawnEntity_Type* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      SpawnEntity_Type_entries, 2, name, &int_value);
  if (success) {
    *value = static_cast<SpawnEntity_Type>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SpawnEntity_Type SpawnEntity::Normal;
constexpr SpawnEntity_Type SpawnEntity::MyCharacter;
constexpr SpawnEntity_Type SpawnEntity::Type_MIN;
constexpr SpawnEntity_Type SpawnEntity::Type_MAX;
constexpr int SpawnEntity::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class LoginResponse::_Internal {
 public:
};

LoginResponse::LoginResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.LoginResponse)
}
LoginResponse::LoginResponse(
    ::google::protobuf::Arena* arena, const LoginResponse& from)
    : LoginResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LoginResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LoginResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.LoginResponse)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void LoginResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
LoginResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<31> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.LoginResponse",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> LoginResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LoginResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::LoginResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .RatkiniaProtocol.LoginResponse.LoginResult result = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .RatkiniaProtocol.LoginResponse.LoginResult result = 1;
    {PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.LoginResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* LoginResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.LoginResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .RatkiniaProtocol.LoginResponse.LoginResult result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.LoginResponse)
  return target;
}

::size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.LoginResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .RatkiniaProtocol.LoginResponse.LoginResult result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void LoginResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const LoginResponse*>(
      &from));
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
  LoginResponse* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.LoginResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LoginResponse::InternalSwap(LoginResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

// ===================================================================

class RegisterResponse::_Internal {
 public:
};

RegisterResponse::RegisterResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.RegisterResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RatkiniaProtocol::RegisterResponse& from_msg)
      : failed_reason_(arena, from.failed_reason_),
        _cached_size_{0} {}

RegisterResponse::RegisterResponse(
    ::google::protobuf::Arena* arena,
    const RegisterResponse& from)
    : ::google::protobuf::MessageLite(arena) {
  RegisterResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.successful_ = from._impl_.successful_;

  // @@protoc_insertion_point(copy_constructor:RatkiniaProtocol.RegisterResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : failed_reason_(arena),
        _cached_size_{0} {}

inline void RegisterResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.successful_ = {};
}
RegisterResponse::~RegisterResponse() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.RegisterResponse)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void RegisterResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.failed_reason_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RegisterResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<34> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.RegisterResponse",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> RegisterResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RegisterResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::RegisterResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string failed_reason = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.failed_reason_)}},
    // bool successful = 1;
    {::_pbi::TcParser::FastV8S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.successful_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool successful = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.successful_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string failed_reason = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.failed_reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\0\15\0\0\0\0\0"
    "RatkiniaProtocol.RegisterResponse"
    "failed_reason"
  }},
};

PROTOBUF_NOINLINE void RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.RegisterResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.failed_reason_.ClearToEmpty();
  _impl_.successful_ = false;
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* RegisterResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.RegisterResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool successful = 1;
  if (this->_internal_successful() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_successful(), target);
  }

  // string failed_reason = 2;
  if (!this->_internal_failed_reason().empty()) {
    const std::string& _s = this->_internal_failed_reason();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RatkiniaProtocol.RegisterResponse.failed_reason");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.RegisterResponse)
  return target;
}

::size_t RegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.RegisterResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string failed_reason = 2;
  if (!this->_internal_failed_reason().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_failed_reason());
  }

  // bool successful = 1;
  if (this->_internal_successful() != 0) {
    total_size += 2;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void RegisterResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const RegisterResponse*>(
      &from));
}

void RegisterResponse::MergeFrom(const RegisterResponse& from) {
  RegisterResponse* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.RegisterResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_failed_reason().empty()) {
    _this->_internal_set_failed_reason(from._internal_failed_reason());
  }
  if (from._internal_successful() != 0) {
    _this->_impl_.successful_ = from._impl_.successful_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void RegisterResponse::CopyFrom(const RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterResponse::InternalSwap(RegisterResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.failed_reason_, &other->_impl_.failed_reason_, arena);
        swap(_impl_.successful_, other->_impl_.successful_);
}

// ===================================================================

class CreateCharacterResponse::_Internal {
 public:
};

CreateCharacterResponse::CreateCharacterResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.CreateCharacterResponse)
}
CreateCharacterResponse::CreateCharacterResponse(
    ::google::protobuf::Arena* arena, const CreateCharacterResponse& from)
    : CreateCharacterResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CreateCharacterResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateCharacterResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
CreateCharacterResponse::~CreateCharacterResponse() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.CreateCharacterResponse)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void CreateCharacterResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CreateCharacterResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<41> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CreateCharacterResponse, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.CreateCharacterResponse",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CreateCharacterResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CreateCharacterResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::CreateCharacterResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .RatkiniaProtocol.CreateCharacterResponse.CreateCharacterResult result = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CreateCharacterResponse, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .RatkiniaProtocol.CreateCharacterResponse.CreateCharacterResult result = 1;
    {PROTOBUF_FIELD_OFFSET(CreateCharacterResponse, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CreateCharacterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.CreateCharacterResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* CreateCharacterResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.CreateCharacterResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .RatkiniaProtocol.CreateCharacterResponse.CreateCharacterResult result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.CreateCharacterResponse)
  return target;
}

::size_t CreateCharacterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.CreateCharacterResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .RatkiniaProtocol.CreateCharacterResponse.CreateCharacterResult result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void CreateCharacterResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const CreateCharacterResponse*>(
      &from));
}

void CreateCharacterResponse::MergeFrom(const CreateCharacterResponse& from) {
  CreateCharacterResponse* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.CreateCharacterResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void CreateCharacterResponse::CopyFrom(const CreateCharacterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.CreateCharacterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateCharacterResponse::InternalSwap(CreateCharacterResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

// ===================================================================

class SendMyCharacters_Data::_Internal {
 public:
};

SendMyCharacters_Data::SendMyCharacters_Data(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.SendMyCharacters.Data)
}
inline PROTOBUF_NDEBUG_INLINE SendMyCharacters_Data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RatkiniaProtocol::SendMyCharacters_Data& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

SendMyCharacters_Data::SendMyCharacters_Data(
    ::google::protobuf::Arena* arena,
    const SendMyCharacters_Data& from)
    : ::google::protobuf::MessageLite(arena) {
  SendMyCharacters_Data* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:RatkiniaProtocol.SendMyCharacters.Data)
}
inline PROTOBUF_NDEBUG_INLINE SendMyCharacters_Data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void SendMyCharacters_Data::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
SendMyCharacters_Data::~SendMyCharacters_Data() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.SendMyCharacters.Data)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void SendMyCharacters_Data::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SendMyCharacters_Data::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<39> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SendMyCharacters_Data, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.SendMyCharacters.Data",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2> SendMyCharacters_Data::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SendMyCharacters_Data_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::SendMyCharacters_Data>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SendMyCharacters_Data, _impl_.name_)}},
    // int32 id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SendMyCharacters_Data, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(SendMyCharacters_Data, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(SendMyCharacters_Data, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\0\4\0\0\0\0\0"
    "RatkiniaProtocol.SendMyCharacters.Data"
    "name"
  }},
};

PROTOBUF_NOINLINE void SendMyCharacters_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.SendMyCharacters.Data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* SendMyCharacters_Data::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.SendMyCharacters.Data)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RatkiniaProtocol.SendMyCharacters.Data.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.SendMyCharacters.Data)
  return target;
}

::size_t SendMyCharacters_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.SendMyCharacters.Data)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void SendMyCharacters_Data::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const SendMyCharacters_Data*>(
      &from));
}

void SendMyCharacters_Data::MergeFrom(const SendMyCharacters_Data& from) {
  SendMyCharacters_Data* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.SendMyCharacters.Data)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void SendMyCharacters_Data::CopyFrom(const SendMyCharacters_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.SendMyCharacters.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendMyCharacters_Data::InternalSwap(SendMyCharacters_Data* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.id_, other->_impl_.id_);
}

// ===================================================================

class SendMyCharacters::_Internal {
 public:
};

SendMyCharacters::SendMyCharacters(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.SendMyCharacters)
}
inline PROTOBUF_NDEBUG_INLINE SendMyCharacters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RatkiniaProtocol::SendMyCharacters& from_msg)
      : character_load_datas_{visibility, arena, from.character_load_datas_},
        _cached_size_{0} {}

SendMyCharacters::SendMyCharacters(
    ::google::protobuf::Arena* arena,
    const SendMyCharacters& from)
    : ::google::protobuf::MessageLite(arena) {
  SendMyCharacters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:RatkiniaProtocol.SendMyCharacters)
}
inline PROTOBUF_NDEBUG_INLINE SendMyCharacters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : character_load_datas_{visibility, arena},
        _cached_size_{0} {}

inline void SendMyCharacters::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SendMyCharacters::~SendMyCharacters() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.SendMyCharacters)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void SendMyCharacters::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SendMyCharacters::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<34> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SendMyCharacters, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.SendMyCharacters",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SendMyCharacters::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SendMyCharacters_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::SendMyCharacters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .RatkiniaProtocol.SendMyCharacters.Data character_load_datas = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SendMyCharacters, _impl_.character_load_datas_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .RatkiniaProtocol.SendMyCharacters.Data character_load_datas = 1;
    {PROTOBUF_FIELD_OFFSET(SendMyCharacters, _impl_.character_load_datas_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RatkiniaProtocol::SendMyCharacters_Data>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SendMyCharacters::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.SendMyCharacters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.character_load_datas_.Clear();
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* SendMyCharacters::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.SendMyCharacters)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .RatkiniaProtocol.SendMyCharacters.Data character_load_datas = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_character_load_datas_size());
       i < n; i++) {
    const auto& repfield = this->_internal_character_load_datas().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.SendMyCharacters)
  return target;
}

::size_t SendMyCharacters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.SendMyCharacters)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .RatkiniaProtocol.SendMyCharacters.Data character_load_datas = 1;
  total_size += 1UL * this->_internal_character_load_datas_size();
  for (const auto& msg : this->_internal_character_load_datas()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void SendMyCharacters::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const SendMyCharacters*>(
      &from));
}

void SendMyCharacters::MergeFrom(const SendMyCharacters& from) {
  SendMyCharacters* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.SendMyCharacters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_character_load_datas()->MergeFrom(
      from._internal_character_load_datas());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void SendMyCharacters::CopyFrom(const SendMyCharacters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.SendMyCharacters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendMyCharacters::InternalSwap(SendMyCharacters* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.character_load_datas_.InternalSwap(&other->_impl_.character_load_datas_);
}

// ===================================================================

class OpenWorld::_Internal {
 public:
};

OpenWorld::OpenWorld(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.OpenWorld)
}
OpenWorld::OpenWorld(
    ::google::protobuf::Arena* arena, const OpenWorld& from)
    : OpenWorld(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE OpenWorld::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void OpenWorld::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OpenWorld::~OpenWorld() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.OpenWorld)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void OpenWorld::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
OpenWorld::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<27> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(OpenWorld, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.OpenWorld",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> OpenWorld::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OpenWorld_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::OpenWorld>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void OpenWorld::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.OpenWorld)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<std::string>();
}

::uint8_t* OpenWorld::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.OpenWorld)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.OpenWorld)
  return target;
}

::size_t OpenWorld::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.OpenWorld)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void OpenWorld::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const OpenWorld*>(
      &from));
}

void OpenWorld::MergeFrom(const OpenWorld& from) {
  OpenWorld* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.OpenWorld)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void OpenWorld::CopyFrom(const OpenWorld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.OpenWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OpenWorld::InternalSwap(OpenWorld* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

// ===================================================================

class Notificate::_Internal {
 public:
};

Notificate::Notificate(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.Notificate)
}
inline PROTOBUF_NDEBUG_INLINE Notificate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RatkiniaProtocol::Notificate& from_msg)
      : text_(arena, from.text_),
        _cached_size_{0} {}

Notificate::Notificate(
    ::google::protobuf::Arena* arena,
    const Notificate& from)
    : ::google::protobuf::MessageLite(arena) {
  Notificate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:RatkiniaProtocol.Notificate)
}
inline PROTOBUF_NDEBUG_INLINE Notificate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : text_(arena),
        _cached_size_{0} {}

inline void Notificate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
Notificate::~Notificate() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.Notificate)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Notificate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.text_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Notificate::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<28> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Notificate, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.Notificate",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 40, 2> Notificate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Notificate_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::Notificate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string text = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Notificate, _impl_.text_)}},
    // .RatkiniaProtocol.Notificate.Type type = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Notificate, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .RatkiniaProtocol.Notificate.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(Notificate, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string text = 2;
    {PROTOBUF_FIELD_OFFSET(Notificate, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\4\0\0\0\0\0"
    "RatkiniaProtocol.Notificate"
    "text"
  }},
};

PROTOBUF_NOINLINE void Notificate::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.Notificate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* Notificate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.Notificate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .RatkiniaProtocol.Notificate.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // string text = 2;
  if (!this->_internal_text().empty()) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RatkiniaProtocol.Notificate.text");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.Notificate)
  return target;
}

::size_t Notificate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.Notificate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string text = 2;
  if (!this->_internal_text().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text());
  }

  // .RatkiniaProtocol.Notificate.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Notificate::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Notificate*>(
      &from));
}

void Notificate::MergeFrom(const Notificate& from) {
  Notificate* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.Notificate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Notificate::CopyFrom(const Notificate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.Notificate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Notificate::InternalSwap(Notificate* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

// ===================================================================

class SpawnEntity_Data::_Internal {
 public:
};

SpawnEntity_Data::SpawnEntity_Data(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.SpawnEntity.Data)
}
SpawnEntity_Data::SpawnEntity_Data(
    ::google::protobuf::Arena* arena, const SpawnEntity_Data& from)
    : SpawnEntity_Data(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SpawnEntity_Data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SpawnEntity_Data::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, entity_id_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, entity_id_) +
               sizeof(Impl_::type_));
}
SpawnEntity_Data::~SpawnEntity_Data() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.SpawnEntity.Data)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void SpawnEntity_Data::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SpawnEntity_Data::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<34> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SpawnEntity_Data, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.SpawnEntity.Data",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SpawnEntity_Data::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SpawnEntity_Data_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::SpawnEntity_Data>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .RatkiniaProtocol.SpawnEntity.Type type = 2;
    {::_pbi::TcParser::FastV32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SpawnEntity_Data, _impl_.type_)}},
    // int32 entity_id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SpawnEntity_Data, _impl_.entity_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 entity_id = 1;
    {PROTOBUF_FIELD_OFFSET(SpawnEntity_Data, _impl_.entity_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .RatkiniaProtocol.SpawnEntity.Type type = 2;
    {PROTOBUF_FIELD_OFFSET(SpawnEntity_Data, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SpawnEntity_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.SpawnEntity.Data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.entity_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* SpawnEntity_Data::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.SpawnEntity.Data)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 entity_id = 1;
  if (this->_internal_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_entity_id(), target);
  }

  // .RatkiniaProtocol.SpawnEntity.Type type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.SpawnEntity.Data)
  return target;
}

::size_t SpawnEntity_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.SpawnEntity.Data)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // int32 entity_id = 1;
  if (this->_internal_entity_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_entity_id());
  }

  // .RatkiniaProtocol.SpawnEntity.Type type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void SpawnEntity_Data::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const SpawnEntity_Data*>(
      &from));
}

void SpawnEntity_Data::MergeFrom(const SpawnEntity_Data& from) {
  SpawnEntity_Data* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.SpawnEntity.Data)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_entity_id() != 0) {
    _this->_impl_.entity_id_ = from._impl_.entity_id_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void SpawnEntity_Data::CopyFrom(const SpawnEntity_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.SpawnEntity.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpawnEntity_Data::InternalSwap(SpawnEntity_Data* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpawnEntity_Data, _impl_.type_)
      + sizeof(SpawnEntity_Data::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(SpawnEntity_Data, _impl_.entity_id_)>(
          reinterpret_cast<char*>(&_impl_.entity_id_),
          reinterpret_cast<char*>(&other->_impl_.entity_id_));
}

// ===================================================================

class SpawnEntity::_Internal {
 public:
};

SpawnEntity::SpawnEntity(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.SpawnEntity)
}
inline PROTOBUF_NDEBUG_INLINE SpawnEntity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RatkiniaProtocol::SpawnEntity& from_msg)
      : entity_spawn_datas_{visibility, arena, from.entity_spawn_datas_},
        _cached_size_{0} {}

SpawnEntity::SpawnEntity(
    ::google::protobuf::Arena* arena,
    const SpawnEntity& from)
    : ::google::protobuf::MessageLite(arena) {
  SpawnEntity* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:RatkiniaProtocol.SpawnEntity)
}
inline PROTOBUF_NDEBUG_INLINE SpawnEntity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entity_spawn_datas_{visibility, arena},
        _cached_size_{0} {}

inline void SpawnEntity::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SpawnEntity::~SpawnEntity() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.SpawnEntity)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void SpawnEntity::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SpawnEntity::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<29> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SpawnEntity, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.SpawnEntity",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SpawnEntity::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SpawnEntity_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::SpawnEntity>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .RatkiniaProtocol.SpawnEntity.Data entity_spawn_datas = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SpawnEntity, _impl_.entity_spawn_datas_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .RatkiniaProtocol.SpawnEntity.Data entity_spawn_datas = 1;
    {PROTOBUF_FIELD_OFFSET(SpawnEntity, _impl_.entity_spawn_datas_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RatkiniaProtocol::SpawnEntity_Data>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SpawnEntity::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.SpawnEntity)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_spawn_datas_.Clear();
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* SpawnEntity::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.SpawnEntity)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .RatkiniaProtocol.SpawnEntity.Data entity_spawn_datas = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_entity_spawn_datas_size());
       i < n; i++) {
    const auto& repfield = this->_internal_entity_spawn_datas().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.SpawnEntity)
  return target;
}

::size_t SpawnEntity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.SpawnEntity)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .RatkiniaProtocol.SpawnEntity.Data entity_spawn_datas = 1;
  total_size += 1UL * this->_internal_entity_spawn_datas_size();
  for (const auto& msg : this->_internal_entity_spawn_datas()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void SpawnEntity::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const SpawnEntity*>(
      &from));
}

void SpawnEntity::MergeFrom(const SpawnEntity& from) {
  SpawnEntity* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.SpawnEntity)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entity_spawn_datas()->MergeFrom(
      from._internal_entity_spawn_datas());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void SpawnEntity::CopyFrom(const SpawnEntity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.SpawnEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpawnEntity::InternalSwap(SpawnEntity* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entity_spawn_datas_.InternalSwap(&other->_impl_.entity_spawn_datas_);
}

// ===================================================================

class AttachComponent_Data::_Internal {
 public:
};

AttachComponent_Data::AttachComponent_Data(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.AttachComponent.Data)
}
AttachComponent_Data::AttachComponent_Data(
    ::google::protobuf::Arena* arena, const AttachComponent_Data& from)
    : AttachComponent_Data(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AttachComponent_Data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AttachComponent_Data::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_entity_),
           0,
           offsetof(Impl_, component_runtime_order_) -
               offsetof(Impl_, target_entity_) +
               sizeof(Impl_::component_runtime_order_));
}
AttachComponent_Data::~AttachComponent_Data() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.AttachComponent.Data)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void AttachComponent_Data::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AttachComponent_Data::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<38> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(AttachComponent_Data, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.AttachComponent.Data",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AttachComponent_Data::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AttachComponent_Data_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::AttachComponent_Data>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 component_runtime_order = 2;
    {::_pbi::TcParser::FastV32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AttachComponent_Data, _impl_.component_runtime_order_)}},
    // int32 target_entity = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AttachComponent_Data, _impl_.target_entity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 target_entity = 1;
    {PROTOBUF_FIELD_OFFSET(AttachComponent_Data, _impl_.target_entity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 component_runtime_order = 2;
    {PROTOBUF_FIELD_OFFSET(AttachComponent_Data, _impl_.component_runtime_order_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AttachComponent_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.AttachComponent.Data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.target_entity_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.component_runtime_order_) -
      reinterpret_cast<char*>(&_impl_.target_entity_)) + sizeof(_impl_.component_runtime_order_));
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* AttachComponent_Data::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.AttachComponent.Data)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 target_entity = 1;
  if (this->_internal_target_entity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_target_entity(), target);
  }

  // int32 component_runtime_order = 2;
  if (this->_internal_component_runtime_order() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_component_runtime_order(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.AttachComponent.Data)
  return target;
}

::size_t AttachComponent_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.AttachComponent.Data)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // int32 target_entity = 1;
  if (this->_internal_target_entity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_target_entity());
  }

  // int32 component_runtime_order = 2;
  if (this->_internal_component_runtime_order() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_component_runtime_order());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void AttachComponent_Data::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const AttachComponent_Data*>(
      &from));
}

void AttachComponent_Data::MergeFrom(const AttachComponent_Data& from) {
  AttachComponent_Data* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.AttachComponent.Data)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_target_entity() != 0) {
    _this->_impl_.target_entity_ = from._impl_.target_entity_;
  }
  if (from._internal_component_runtime_order() != 0) {
    _this->_impl_.component_runtime_order_ = from._impl_.component_runtime_order_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void AttachComponent_Data::CopyFrom(const AttachComponent_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.AttachComponent.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AttachComponent_Data::InternalSwap(AttachComponent_Data* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AttachComponent_Data, _impl_.component_runtime_order_)
      + sizeof(AttachComponent_Data::_impl_.component_runtime_order_)
      - PROTOBUF_FIELD_OFFSET(AttachComponent_Data, _impl_.target_entity_)>(
          reinterpret_cast<char*>(&_impl_.target_entity_),
          reinterpret_cast<char*>(&other->_impl_.target_entity_));
}

// ===================================================================

class AttachComponent::_Internal {
 public:
};

AttachComponent::AttachComponent(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.AttachComponent)
}
inline PROTOBUF_NDEBUG_INLINE AttachComponent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RatkiniaProtocol::AttachComponent& from_msg)
      : component_attach_datas_{visibility, arena, from.component_attach_datas_},
        _cached_size_{0} {}

AttachComponent::AttachComponent(
    ::google::protobuf::Arena* arena,
    const AttachComponent& from)
    : ::google::protobuf::MessageLite(arena) {
  AttachComponent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:RatkiniaProtocol.AttachComponent)
}
inline PROTOBUF_NDEBUG_INLINE AttachComponent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : component_attach_datas_{visibility, arena},
        _cached_size_{0} {}

inline void AttachComponent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AttachComponent::~AttachComponent() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.AttachComponent)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void AttachComponent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AttachComponent::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<33> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(AttachComponent, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.AttachComponent",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AttachComponent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AttachComponent_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::AttachComponent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .RatkiniaProtocol.AttachComponent.Data component_attach_datas = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AttachComponent, _impl_.component_attach_datas_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .RatkiniaProtocol.AttachComponent.Data component_attach_datas = 1;
    {PROTOBUF_FIELD_OFFSET(AttachComponent, _impl_.component_attach_datas_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RatkiniaProtocol::AttachComponent_Data>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AttachComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.AttachComponent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_attach_datas_.Clear();
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* AttachComponent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.AttachComponent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .RatkiniaProtocol.AttachComponent.Data component_attach_datas = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_component_attach_datas_size());
       i < n; i++) {
    const auto& repfield = this->_internal_component_attach_datas().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.AttachComponent)
  return target;
}

::size_t AttachComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.AttachComponent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .RatkiniaProtocol.AttachComponent.Data component_attach_datas = 1;
  total_size += 1UL * this->_internal_component_attach_datas_size();
  for (const auto& msg : this->_internal_component_attach_datas()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void AttachComponent::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const AttachComponent*>(
      &from));
}

void AttachComponent::MergeFrom(const AttachComponent& from) {
  AttachComponent* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.AttachComponent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_component_attach_datas()->MergeFrom(
      from._internal_component_attach_datas());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void AttachComponent::CopyFrom(const AttachComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.AttachComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AttachComponent::InternalSwap(AttachComponent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.component_attach_datas_.InternalSwap(&other->_impl_.component_attach_datas_);
}

// ===================================================================

class UpdateComponent_Data::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateComponent_Data>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateComponent_Data, _impl_._has_bits_);
};

void UpdateComponent_Data::clear_component_variant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.component_variant_ != nullptr) _impl_.component_variant_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UpdateComponent_Data::UpdateComponent_Data(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.UpdateComponent.Data)
}
inline PROTOBUF_NDEBUG_INLINE UpdateComponent_Data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RatkiniaProtocol::UpdateComponent_Data& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateComponent_Data::UpdateComponent_Data(
    ::google::protobuf::Arena* arena,
    const UpdateComponent_Data& from)
    : ::google::protobuf::MessageLite(arena) {
  UpdateComponent_Data* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.component_variant_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::MessageLite::CopyConstruct<::RatkiniaProtocol::ComponentVariant>(
                              arena, *from._impl_.component_variant_)
                        : nullptr;
  _impl_.target_entity_ = from._impl_.target_entity_;

  // @@protoc_insertion_point(copy_constructor:RatkiniaProtocol.UpdateComponent.Data)
}
inline PROTOBUF_NDEBUG_INLINE UpdateComponent_Data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateComponent_Data::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, component_variant_),
           0,
           offsetof(Impl_, target_entity_) -
               offsetof(Impl_, component_variant_) +
               sizeof(Impl_::target_entity_));
}
UpdateComponent_Data::~UpdateComponent_Data() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.UpdateComponent.Data)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void UpdateComponent_Data::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.component_variant_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UpdateComponent_Data::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<38> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(UpdateComponent_Data, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.UpdateComponent.Data",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> UpdateComponent_Data::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateComponent_Data, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateComponent_Data_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::UpdateComponent_Data>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .RatkiniaProtocol.ComponentVariant component_variant = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateComponent_Data, _impl_.component_variant_)}},
    // int32 target_entity = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateComponent_Data, _impl_.target_entity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 target_entity = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateComponent_Data, _impl_.target_entity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .RatkiniaProtocol.ComponentVariant component_variant = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateComponent_Data, _impl_.component_variant_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RatkiniaProtocol::ComponentVariant>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateComponent_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.UpdateComponent.Data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.component_variant_ != nullptr);
    _impl_.component_variant_->Clear();
  }
  _impl_.target_entity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* UpdateComponent_Data::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.UpdateComponent.Data)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 target_entity = 1;
  if (this->_internal_target_entity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_target_entity(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .RatkiniaProtocol.ComponentVariant component_variant = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.component_variant_, _impl_.component_variant_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.UpdateComponent.Data)
  return target;
}

::size_t UpdateComponent_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.UpdateComponent.Data)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .RatkiniaProtocol.ComponentVariant component_variant = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.component_variant_);
  }

  // int32 target_entity = 1;
  if (this->_internal_target_entity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_target_entity());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void UpdateComponent_Data::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const UpdateComponent_Data*>(
      &from));
}

void UpdateComponent_Data::MergeFrom(const UpdateComponent_Data& from) {
  UpdateComponent_Data* const _this = this;
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.UpdateComponent.Data)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.component_variant_ != nullptr);
    if (_this->_impl_.component_variant_ == nullptr) {
      _this->_impl_.component_variant_ =
          ::google::protobuf::MessageLite::CopyConstruct<::RatkiniaProtocol::ComponentVariant>(arena, *from._impl_.component_variant_);
    } else {
      _this->_impl_.component_variant_->MergeFrom(*from._impl_.component_variant_);
    }
  }
  if (from._internal_target_entity() != 0) {
    _this->_impl_.target_entity_ = from._impl_.target_entity_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void UpdateComponent_Data::CopyFrom(const UpdateComponent_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.UpdateComponent.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateComponent_Data::InternalSwap(UpdateComponent_Data* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateComponent_Data, _impl_.target_entity_)
      + sizeof(UpdateComponent_Data::_impl_.target_entity_)
      - PROTOBUF_FIELD_OFFSET(UpdateComponent_Data, _impl_.component_variant_)>(
          reinterpret_cast<char*>(&_impl_.component_variant_),
          reinterpret_cast<char*>(&other->_impl_.component_variant_));
}

// ===================================================================

class UpdateComponent::_Internal {
 public:
};

UpdateComponent::UpdateComponent(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.UpdateComponent)
}
inline PROTOBUF_NDEBUG_INLINE UpdateComponent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RatkiniaProtocol::UpdateComponent& from_msg)
      : component_update_datas_{visibility, arena, from.component_update_datas_},
        _cached_size_{0} {}

UpdateComponent::UpdateComponent(
    ::google::protobuf::Arena* arena,
    const UpdateComponent& from)
    : ::google::protobuf::MessageLite(arena) {
  UpdateComponent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:RatkiniaProtocol.UpdateComponent)
}
inline PROTOBUF_NDEBUG_INLINE UpdateComponent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : component_update_datas_{visibility, arena},
        _cached_size_{0} {}

inline void UpdateComponent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdateComponent::~UpdateComponent() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.UpdateComponent)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void UpdateComponent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UpdateComponent::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<33> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(UpdateComponent, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.UpdateComponent",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateComponent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateComponent_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::UpdateComponent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .RatkiniaProtocol.UpdateComponent.Data component_update_datas = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateComponent, _impl_.component_update_datas_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .RatkiniaProtocol.UpdateComponent.Data component_update_datas = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateComponent, _impl_.component_update_datas_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RatkiniaProtocol::UpdateComponent_Data>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.UpdateComponent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_update_datas_.Clear();
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* UpdateComponent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.UpdateComponent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .RatkiniaProtocol.UpdateComponent.Data component_update_datas = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_component_update_datas_size());
       i < n; i++) {
    const auto& repfield = this->_internal_component_update_datas().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.UpdateComponent)
  return target;
}

::size_t UpdateComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.UpdateComponent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .RatkiniaProtocol.UpdateComponent.Data component_update_datas = 1;
  total_size += 1UL * this->_internal_component_update_datas_size();
  for (const auto& msg : this->_internal_component_update_datas()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void UpdateComponent::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const UpdateComponent*>(
      &from));
}

void UpdateComponent::MergeFrom(const UpdateComponent& from) {
  UpdateComponent* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.UpdateComponent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_component_update_datas()->MergeFrom(
      from._internal_component_update_datas());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void UpdateComponent::CopyFrom(const UpdateComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.UpdateComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateComponent::InternalSwap(UpdateComponent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.component_update_datas_.InternalSwap(&other->_impl_.component_update_datas_);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace RatkiniaProtocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
